**学习计划概述：**

今天我将按照以下学习计划进行Java基础复习。请充当我的老师，并指导我一步步完成每个学习环节。在我执行每个步骤时，如果有任何问题或疑问，请帮助我解决，并在我理解并完成当前步骤后，指导我进入下一个步骤。请确保每次只给我当前步骤的内容，等我完成后再继续给我下一步内容。

---

### **第一阶段（第1-4周）：基础复习与技能提升**
#### **第1周：快速复习基础**
**目标**：巩固 Java 基础，提升算法解题能力，并为后续的进阶学习打下坚实的基础。

---

### **第二天：Java 基础复习 - 集合框架与异常处理**

#### **学习内容：**

1. **集合框架复习：**
   - **List**：有序集合，允许重复元素，常用实现类：`ArrayList`, `LinkedList`
     - 操作：`add()`, `remove()`, `get()`, `set()`, `contains()`
     - 遍历：`for` 循环、增强型 `for` 循环、迭代器
   - **Set**：无序集合，不允许重复元素，常用实现类：`HashSet`, `LinkedHashSet`, `TreeSet`
     - 特点：`HashSet` 是基于哈希表的，`TreeSet` 是基于红黑树的
   - **Map**：键值对集合，常用实现类：`HashMap`, `TreeMap`, `LinkedHashMap`
     - 操作：`put()`, `get()`, `containsKey()`, `remove()`
     - 遍历：`keySet()`, `values()`, `entrySet()`
   - **Collection 接口**：`add()`, `remove()`, `contains()`, `size()`

2. **异常处理：**
   - **异常分类**：
     - **检查型异常（Checked Exception）**：如 `IOException`, `SQLException`，编译时必须处理（通过 `try-catch` 或 `throws`）
     - **非检查型异常（Unchecked Exception）**：如 `NullPointerException`, `ArrayIndexOutOfBoundsException`，运行时异常，不强制处理
   - **自定义异常**：
     - 创建一个自定义异常类，继承自 `Exception` 或 `RuntimeException`
   - **异常捕获与抛出**：
     - `try-catch` 语句：捕获异常并进行处理
     - `finally` 语句：无论是否发生异常都会执行的代码
     - 使用 `throw` 和 `throws` 抛出异常

3. **代码实践：**
   - **集合框架**：
     - 创建一个 `List`，添加一些元素，然后遍历它。
     - 创建一个 `Map`，存储学生的学号和姓名，并遍历输出所有的学生信息。
   - **异常处理**：
     - 编写一个方法，通过输入数字计算除法，捕获并处理可能的 `ArithmeticException`。
     - 创建一个自定义异常类（例如：`InvalidAgeException`），并在程序中使用它。

#### **练习题：**
1. 编写一个程序，使用 `ArrayList` 存储 5 个整数，输出所有元素，并使用 `Iterator` 遍历该列表。
2. 编写一个程序，使用 `HashMap` 存储学生的学号（作为键）和姓名（作为值），然后输出所有学号及对应姓名。
3. 编写一个程序，捕获并处理 `ArithmeticException`，当出现除以零的情况时，输出错误信息。
4. 自定义一个 `AgeOutOfRangeException` 异常类，用于检查输入的年龄是否合法（例如，年龄不能为负数），并抛出该异常。

#### **学习资源：**
- **书籍**：《Java 编程思想》第4章（集合框架与异常处理）
- **在线教程**：可以参考 [w3schools Java Collections](https://www.w3schools.com/java/java_arraylist.asp) 和 [Java Exception Handling](https://www.geeksforgeeks.org/exception-handling-java/)。
- **Leetcode**：尝试一些集合操作的题目，如 `Leetcode #141: Linked List Cycle` 和 `Leetcode #202: Happy Number`。

#### **复习建议：**
- **笔记整理**：整理关于集合框架和异常处理的笔记，尤其是常用的集合类（如 `ArrayList`, `HashSet`, `HashMap`），以及如何捕获和抛出异常。
- **代码实践**：多进行实际编程练习，创建不同类型的集合并进行操作，理解它们的差异和应用场景。

#### **每天目标：**
- **学习时长**：2 小时
- **目标**：掌握集合框架的核心概念及常用操作，理解 Java 异常处理机制，并能够进行简单的异常捕获与处理。
- **练习**：完成上述练习题，并通过 Leetcode 题目进行集合类和异常处理的应用。

---

### **每日总结：**
- 在结束当天的学习后，记录下您遇到的难点与问题，准备第二天的复习。
- 复习代码实现时，回顾每一段代码的功能，并确保完全理解每个概念如何工作。

---

### **第二天复习（计划）**：
- 回顾集合框架的基本操作，并通过练习题加深理解。
- 复习异常处理，尝试编写更复杂的异常处理代码，特别是自定义异常的创建和使用。

---

**请指导我从第一步开始，并在我完成每一部分后，再给我下一个步骤。如果有问题，我会及时向你求助。**